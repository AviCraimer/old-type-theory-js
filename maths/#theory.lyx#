#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Simple Type Theory
\end_layout

\begin_layout Section
Basics
\end_layout

\begin_layout Standard
A 
\series bold
term
\series default
 is a value of a 
\series bold
type
\series default
.
 Some terms are 
\series bold
variables
\series default
 (as we explain later).
 Each term has a set/list of 
\series bold
free variables
\series default
 (as we explain later).
 
\end_layout

\begin_layout Standard
There are six kinds of expressions:
\end_layout

\begin_layout Enumerate
A 
\series bold
typing declaration
\series default
 
\begin_inset Formula $x:A$
\end_inset

 says that 
\begin_inset Formula $x$
\end_inset

 is a term of type 
\begin_inset Formula $A.$
\end_inset


\end_layout

\begin_layout Enumerate
A 
\series bold
universal declaration
\series default
 
\begin_inset Formula $A\hspace{1em}\text{type}$
\end_inset

 says that 
\begin_inset Formula $A$
\end_inset

 is a type.
 When we have a stack of universes, this is equivalent to saying 
\begin_inset Formula $A:\mathbb{U}_{0}$
\end_inset

 in HoTT.
\end_layout

\begin_layout Enumerate
An 
\series bold
equality declaration
\series default
 
\begin_inset Formula $x=y:A$
\end_inset

 says values 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 of type 
\begin_inset Formula $A$
\end_inset

 are equal.
\end_layout

\begin_layout Enumerate
A 
\series bold
context
\series default
 
\begin_inset Formula $\Gamma$
\end_inset

 is a list, with each of its entries as a typing declaration or a universal
 declaration.
 We write 
\begin_inset Formula $\Gamma::\Delta$
\end_inset

 to denote the concatenation of lists.
 
\end_layout

\begin_layout Enumerate
A
\series bold
 context declaration
\series default
 
\begin_inset Formula $\Gamma\hspace{1em}\text{ctx}$
\end_inset

 is a declaration that the context 
\begin_inset Formula $\Gamma$
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

well formed
\begin_inset Quotes erd
\end_inset

 (the meaning will be clear later from the rules).
\end_layout

\begin_layout Enumerate
A 
\series bold
judgment
\series default
 is something of the form 
\begin_inset Formula $\Gamma\vdash d$
\end_inset

 where 
\begin_inset Formula $\Gamma$
\end_inset

 is a context, and 
\begin_inset Formula $d$
\end_inset

 is either a typing declaration or a universal declaration or an equality
 declaration.
 Sometimes we call 
\begin_inset Formula $d$
\end_inset

 the 
\series bold
declaration
\series default
 of the judgment 
\begin_inset Formula $\Gamma\vdash d$
\end_inset

.
\end_layout

\begin_layout Standard
A 
\series bold
rule
\series default
 is something of the form
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{c}
\underline{J_{1}\hspace{1em}J_{2}\hspace{1em}\dots\hspace{1em}J_{n}}\\
K
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $J_{1},J_{2},\dots,J_{n}$
\end_inset

 and 
\begin_inset Formula $K$
\end_inset

 are all judgements.
 The meaning of the rule is that if each judgement in 
\begin_inset Formula $J_{1},J_{2},\dots,J_{n}$
\end_inset

 can be derived in the type theory then judgement 
\begin_inset Formula $K$
\end_inset

 may also be derived.
 Judgements can be stacked to make proof trees.
 An axiom is a rule
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{c}
\underline{\hspace{1em}}\\
K
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
with no pre-requisits.
 
\end_layout

\begin_layout Standard
In addition to the assumed rules (which we name)
\end_layout

\begin_layout Section
Forming base types
\end_layout

\begin_layout Standard
We write 
\begin_inset Formula $.$
\end_inset

 to denote the empty context.
 The fact that the empty context is well formed is formalized by the rule:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{array}{c}
\\
\overline{.\hspace{1em}\text{ctx}}
\end{array}\text{ctx-EMP}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The next rule allows a well formed context to be extended by introducing
 a
\series bold
 base type 
\begin_inset Formula $A$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{array}{c}
\Gamma\hspace{1em}\text{ctx}\\
\overline{\Gamma::(A\hspace{1em}\text{type})\hspace{1em}\text{ctx}}
\end{array}\text{ctx-EXT1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The base type 
\begin_inset Formula $A$
\end_inset

 must not appear in the context 
\begin_inset Formula $\Gamma.$
\end_inset

 Here we assume we have some list of base types If we are trying to model
 a paricular system we may have specific base types ready, but for now let
 ud just think of base types as variable types (although in this document
 we reserve the phrase 
\begin_inset Quotes eld
\end_inset

variable
\begin_inset Quotes erd
\end_inset

 for terms).
 So it is fine for 
\begin_inset Formula $A$
\end_inset

 to be any type new to the conrext.
\end_layout

\begin_layout Standard
We can convert from well formed contexts to judgements about universal declarati
ons using the following:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{array}{c}
\Gamma::(A\hspace{1em}\text{type})::\Delta\hspace{1em}\text{ctx}\\
\overline{\Gamma::(A\hspace{1em}\text{type})::\Delta\vdash(A\hspace{1em}\text{type})}
\end{array}\text{Vble1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\Gamma$
\end_inset

 and 
\begin_inset Formula $\Delta$
\end_inset

 are contexts.
\end_layout

\begin_layout Subsection
Example
\end_layout

\begin_layout Standard
Here is an example of how we derive the judgement 
\begin_inset Formula $A\hspace{1em}\text{type}\vdash A\hspace{1em}\text{type}.$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{array}{c}
\\
\overline{.\hspace{1em}\text{ctx}}\\
\overline{(A\hspace{1em}\text{type})\hspace{1em}\text{ctx}}\\
\Gamma(A\hspace{1em}\text{type})\vdash(A\hspace{1em}\text{type})\\
\\
\\
\\
\\
\\
\\
\\
\\
\\
\\
\\
\end{array}
\end{equation}

\end_inset


\end_layout

\end_body
\end_document
